{"abi":[],"bytecode":{"object":"0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c87ad51295346ef1a51d720bd440bd3fb8b4948ca335867fee32974d720ed7e264736f6c63430008140033","sourceMap":"755:3275:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c87ad51295346ef1a51d720bd440bd3fb8b4948ca335867fee32974d720ed7e264736f6c63430008140033","sourceMap":"755:3275:22:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/dependencies/openzeppelin/upgradeability/Clones.sol\":\"Clones\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"src/dependencies/openzeppelin/upgradeability/Clones.sol\":{\"keccak256\":\"0xd135f6dec9239f6ae700872815f976ff30c16ba67c854b6a3113abc1d7d43a86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7b067f0e26e468b8c72480550aebc8ed0b6980030f98cf3843a42c6b29f023a\",\"dweb:/ipfs/QmV3JcbfhnrHAKBXfbjpiC1vTsMgnxChcXkKjXbkPzn4a2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solady/=lib/solady/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/dependencies/openzeppelin/upgradeability/Clones.sol":"Clones"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/dependencies/openzeppelin/upgradeability/Clones.sol":{"keccak256":"0xd135f6dec9239f6ae700872815f976ff30c16ba67c854b6a3113abc1d7d43a86","urls":["bzz-raw://e7b067f0e26e468b8c72480550aebc8ed0b6980030f98cf3843a42c6b29f023a","dweb:/ipfs/QmV3JcbfhnrHAKBXfbjpiC1vTsMgnxChcXkKjXbkPzn4a2"],"license":"MIT"}},"version":1},"id":22}